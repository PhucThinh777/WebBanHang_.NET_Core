@model WebBanHang.Models.ViewModels.CartItemViewModel
@{
    ViewData["Title"] = "Cart";
}

<h1>Đây là trang giỏ hàng</h1>

<section id="cart_items">
    <div class="container">
        <div class="breadcrumbs">
            <ol class="breadcrumb">
                <li><a href="#">Home</a></li>
                <li class="active">Shopping Cart</li>
            </ol>
        </div>
        <div class="table-responsive cart_info">
            <table class="table table-condensed">
                <thead>
                    <tr class="cart_menu">
                        <td class="image">Image</td>
                        <td class="name">Name</td>
                        <td class="price">Price</td>
                        <td class="quantity">Quantity</td>
                        <td class="total">Total</td>
                        <td class="action">Action</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.CartItems.Count > 0)
                    {
                        @foreach (var item in Model.CartItems)
                        {
                            <tr>
                                <td class="cart_product">
                                    <img width="150px" height="150px" src="~/media/products/@item.Image" alt="">
                                </td>
                                <td class="cart_name">
                                    <h4><a href="">@item.ProductName</a></h4>
                                </td>
                                <td class="cart_price">
                                    <p>$ @item.Price</p>
                                </td>
                                <td>
                                    <a class="btn btn-default btn-sm" asp-controller="Cart" asp-action="Increase" asp-route-id="@item.ProductId"> + </a>
                                    <input class="cart_quantity_input" type="text" name="quantity" value="@item.Quantity" autocomplete="off" size="2">
                                    <a class="btn btn-success btn-sm" asp-controller="Cart" asp-action="Decrease" asp-route-id="@item.ProductId"> - </a>
                                    <a class="btn btn-danger btn-sm" asp-controller="Cart" asp-action="Remove" asp-route-id="@item.ProductId"> Remove </a>
                                </td>
                                <td class="cart_total">
                                    <p class="cart_total_price">@Model.CartItems.Where(x => x.ProductId == item.ProductId).Sum(x => x.Quantity * x.Price).ToString()</p>
                                </td>
                            </tr>
                        }
                        <tr rowspan="5">
                            <td colspan="5"><p>Grand Total: @Model.GrandTotal.ToString()</p></td>
                            <td><a class="btn btn-danger btn-sm" asp-controller="Cart" asp-action="Clear"> Clear </a></td>

                        </tr>
                        
                        <tr>
                            @if (User.Identity?.IsAuthenticated ?? false)
                            {
                                <td><h4 style="color: red">Chọn hình thức thanh toán:</h4></td>
                                <td><a style="color: limegreen; font-size: 16px" asp-controller="Cart" asp-action="IndexCOD"> Thanh toán khi nhận hàng </a></td>
                                <td><a style="color: limegreen; font-size: 16px" asp-controller="Cart" asp-action="IndexPaypal"> Thanh toán bằng Paypal </a></td>
                            }
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="5"><h4>Giỏ hàng trống!</h4></td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</section> <!--/#cart_items-->
@section Scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=@ViewBag.PaypalClientdId"></script>
    <script>
        paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'silver',
                tagline: 'false'
            },
            createOrder: (data, actions) => {
                return fetch("/Cart/create-paypal-order", {
                    method: "post",
                }).then((response) => {
                    if (!response.ok) {
                        return response.json().then(error => { throw error; });
                    }

                    return response.json();
                }).then((order) => order.id)
                    .catch(error => alert(error.message));
            },
            onApprove: (data, actions) => {
                return fetch(`/Cart/capture-paypal-order?orderId=${data.orderID}`, {
                    method: "post",
                }).then((response) => {
                    if (!response.ok) {
                        return response.json().then(error => { throw error; });
                    }

                    // Đổi địa chỉ tới action thông báo thành công
                    window.location.href = "/Cart/PaymentSuccess";
                }).catch(error => alert(error.message));
            }
        }).render('#paypal-button-container');
    </script>
}
